using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;

var builder = WebApplication.CreateBuilder(args);

// ğŸ”¹ MVC ve Razor Pages DesteÄŸi
builder.Services.AddControllersWithViews();
builder.Services.AddRazorPages();

// ğŸ”¹ CORS PolitikasÄ± (React iÃ§in API'ye eriÅŸim izni)
builder.Services.AddCors(options =>
{
    options.AddPolicy("AllowReactApp",
        policy => policy
            .WithOrigins("http://localhost:3000") // React geliÅŸtirme sunucusunun adresi
            .AllowAnyHeader()
            .AllowAnyMethod()
    );
});

var app = builder.Build();

// ğŸ”¹ GeliÅŸtirme ortamÄ±nda hata yakalama
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error");
    app.UseHsts();
}

// ğŸ”¹ HTTPS yÃ¶nlendirme ve statik dosyalar
app.UseHttpsRedirection();
app.UseStaticFiles();

// ğŸ”¹ CORS middleware (React'Ä±n API'ye eriÅŸebilmesi iÃ§in)
app.UseCors("AllowReactApp");

// ğŸ”¹ Routing, Authentication ve Authorization
app.UseRouting();
app.UseAuthorization();

// ğŸ”¹ React Build DosyalarÄ±nÄ± Sunma (EÄŸer React'Ä± ASP.NET iÃ§inde host ediyorsan)
app.UseDefaultFiles();  // index.html gibi dosyalarÄ± otomatik bulur
app.UseStaticFiles();   // wwwroot ve build klasÃ¶rÃ¼nÃ¼ sunar

// ğŸ”¹ API ve UI yÃ¶nlendirme
app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}");

// ğŸ”¹ EÄŸer React SPA UygulamasÄ± Dahilse (SPA Fallback)
app.MapFallbackToFile("/index.html");

app.Run();
